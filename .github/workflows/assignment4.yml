name: assignment4

# Trigger the workflow manually using the workflow_dispatch event
on:
  workflow_dispatch:

jobs:
  build:
    # The build job runs on the latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Step to check out the repository code
      - name: Capture workflow start time
        run: echo "WORKFLOW_START_TIME=$(date -Iminutes)" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      # Step to set up Docker Buildx for building multi-platform images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 #latest stable version

#      # Step to log in to Docker Hub using credentials stored in GitHub Secrets
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }} #these are defined in the repository secrets settings
#          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step to build and push the stock service image to Docker Hub
      - name: build_stock_service
        id: build_stock_service
        uses: docker/build-push-action@v4
        with:
          context: ./stock_portfolio_app
          tags: ${{ secrets.DOCKER_USERNAME }}/stock_service:latest
          outputs: type=docker, dest=/tmp/stock_portfolio_app_image.tar
#          push: true

      - name: Upload stock_portfolio_app image
        uses: actions/upload-artifact@v4
        with:
          name: stock_portfolio_app_image
          path: /tmp/stock_portfolio_app_image.tar

      - name: build_capital_gain_service
        id: build_capital_gain_service
        uses: docker/build-push-action@v4
        with:
          context: ./capital_gain_service
          tags: ${{ secrets.DOCKER_USERNAME }}/capital_gain_service:latest
          outputs: type=docker, dest=/tmp/capital_gain_service_image.tar
#          push: true

      - name: Upload capital_gain_service image
        uses: actions/upload-artifact@v4
        with:
          name: capital_gain_service_image
          path: /tmp/capital_gain_service_image.tar

      - name: Create log file
        run: |
          echo "${{ env.WORKFLOW_START_TIME }}" > log.txt
          echo "Nadav Peled, Daniel Katz" >> log.txt
          if [ "${{ steps.build_stock_service.outcome }}" == "success" ] && [ "${{ steps.build_capital_gain_service.outcome }}" == "success" ]; then
          echo "images successfully built" >> log.txt
          else
          echo "images not able to be built" >> log.txt
          fi

      - name: Upload log file
        uses: actions/upload-artifact@v4
        with:
          name: log-file
          path: log.txt

  test:
    # The test job runs on the latest version of Ubuntu and depends on the build job
    runs-on: ubuntu-latest
    needs: build

    # TODO: necessary ?
    services:
      # Define a MongoDB service for the test job
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      # TODO: mentioned at slide 31 - is this the correct place ?
#      - name: Wait for the container to initialize
#        run: sleep 5

      # Step to check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step to set up and run Docker Compose
      - name: Set up Docker Compose
        run: |
          docker-compose up -d --build

      # Step to run tests using pytest
      - name: Run tests #TODO: right tests!
        run: |
          pytest

      # Step to stop Docker Compose services
      - name: Stop Docker Compose
        run: |
          docker-compose down

  query: #TODO: verify this
    # The query job runs on the latest version of Ubuntu and depends on the test job
    runs-on: ubuntu-latest
    needs: test

    services:
      # Define a MongoDB service for the query job
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      # Step to check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step to set up and run Docker Compose
      - name: Set up Docker Compose
        run: |
          docker-compose up -d --build

      # Step to run query tests using a Python script
      - name: Run query tests
        run: |
          python query_tests.py

      # Step to stop Docker Compose services
      - name: Stop Docker Compose
        run: |
          docker-compose down
