name: assignment4

# Trigger the workflow manually using the workflow_dispatch event
on:
  workflow_dispatch:

jobs:
  build:
    # The build job runs on the latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:

      - name: Capture workflow start time
        run: echo "WORKFLOW_START_TIME=$(date -Iminutes)" >> $GITHUB_ENV
          -
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create log file
        run: |
          echo "${{ env.WORKFLOW_START_TIME }}" > log.txt
          echo "Nadav Peled, Daniel Katz" >> log.txt

      - name: Check dir
        run: |
          ls -l
          pwd
          cat log.txt || echo "log.txt not found!"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 #latest stable version

      - name: Build and export stock portfolio app
        id: build_stock_portfolio_app
        uses: docker/build-push-action@v4
        with:
          context: ./stock_portfolio_app
          tags: stock_portfolio_app:latest
          outputs: type=docker, dest=/tmp/stock_portfolio_app_image.tar

      - name: Build and export capital gain service
        id: build_capital_gain_service
        uses: docker/build-push-action@v4
        with:
          context: ./capital_gain_service
          tags: capital_gain_service:latest
          outputs: type=docker, dest=/tmp/capital_gain_service_image.tar

      - name: Upload stock_portfolio_app image
        uses: actions/upload-artifact@v4
        with:
          name: stock_portfolio_app_image
          path: /tmp/stock_portfolio_app_image.tar

      - name: Upload capital_gain_service image
        uses: actions/upload-artifact@v4
        with:
          name: capital_gain_service_image
          path: /tmp/capital_gain_service_image.tar

      - name: Check dir
        run: |
          ls -l
          pwd
          cat log.txt || echo "log.txt not found!"

# TODO: try to change the images to fail this step
      - name: Update log file
        run: |
          if [ "${{ steps.build_stock_portfolio_app.outcome }}" == "success" ] && [ "${{ steps.build_capital_gain_service.outcome }}" == "success" ]; then
          echo "image successfully built" >> log.txt
          else
          echo "image not able to be built" >> log.txt
          fi

      - name: Check dir after update
        run: |
          ls -l
          pwd
          cat log.txt || echo "log.txt not found!"

      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log-file
          path: log.txt

  test:
    # The test job runs on the latest version of Ubuntu and depends on the build job
    runs-on: ubuntu-latest
    needs: build

    steps:
      # 1. download Docker images, set up Docker Compose
      # Step to download stock_portfolio_app image
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create test results file
        run: |
          cd tests
          touch assn4_test_results.txt

      - name: Check dir
        run: |
          ls -l
          pwd
          cat tests/assn4_test_results.txt || echo "tests/assn4_test_results.txt not found!"

      - name: Download stock_portfolio_app image
        uses: actions/download-artifact@v4
        with:
          name: stock_portfolio_app_image
          path: /tmp

      # Step to download capital_gain_service image
      - name: Download capital_gain_service image
        uses: actions/download-artifact@v4
        with:
          name: capital_gain_service_image
          path: /tmp

      - name: Download log file
        uses: actions/download-artifact@v4
        with:
          name: log-file
          path: .

      - name: verify downloaded artifacts
        run: |
          ls /tmp
          ls .

      # Step to load Docker images
      - name: Load Docker images
        run: |
          docker load --input /tmp/stock_portfolio_app_image.tar
          docker load --input /tmp/capital_gain_service_image.tar

      # TODO: need to add mongo image or docker-compose downloads it?
      # TODO: need to change the docker-compose file to use the images we loaded? asked in the forum

      # Step to set up Docker Compose
      - name: Set up Docker Compose
        id: set_up_docker_compose
        run: |
          docker-compose -f docker-compose.yml up -d

      # Before starting the tests, wait for the container to initialize
      - name: Wait for the container to initialize
        run: sleep 5

      - name: Debug File Path
        if: always()
        run: pwd && ls -l

      # Check if the containers are up and running
      - name: Update log file
        if: always()
        run: |
          if [ "${{ steps.set_up_docker_compose.outcome }}" == "success" ] ; then
          echo "Container up and running" >> log.txt
          else
          echo "Container failed to run" >> log.txt
          fi

      # 2. set up python and pytest environment
      - name: Set up Python
        uses: actions/setup-python@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install requests
          pip install -r stock_portfolio_app/requirements.txt

      # Step to run pytest
      #TODO: right tests!
      - name: Run tests
        id: run_tests
        run: |
          pytest -v tests/assn4_tests.py >> assn4_test_results.txt

      # Check if the tests passed
      - name: Update log file
        run: |
          if [ "${{ steps.run_tests.outcome }}" == "success" ] ; then
          echo "tests succeeded" >> log.txt
          else
          echo "tests failed" >> log.txt
          fi

      - name: Debug File Path
        if: always()
        run: pwd && ls -l

      - name: Check dir
        run: |
          ls -l
          pwd
          cat tests/assn4_test_results.txt || echo "tests/assn4_test_results.txt not found!"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: assn4_test_results
          path: tests/assn4_test_results.txt

      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log-file
          path: log.txt

      # Step to shut down Docker Compose
      - name: Tear down services
        run: |
          docker-compose down

#  query: #TODO: verify this
#    # The query job runs on the latest version of Ubuntu and depends on the test job
#    runs-on: ubuntu-latest
#    needs: test
#
#    services:
#      # Define a MongoDB service for the query job
#      mongodb:
#        image: mongo:latest
#        ports:
#          - 27017:27017
#
#    steps:
#      # Step to check out the repository code
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      # Step to set up and run Docker Compose
#      - name: Set up Docker Compose
#        run: |
#          docker-compose up -d --build
#
#      # Step to run query tests using a Python script
#      - name: Run query tests
#        run: |
#          python query_tests.py
#
#      # Step to stop Docker Compose services
#      - name: Stop Docker Compose
#        run: |
#          docker-compose down
